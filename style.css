model-viewer {
  background-color: #eee;
  overflow-x: hidden;
  --poster-color: #eee;
}

model-viewer > #ar-prompt {
  position: absolute;
  left: 50%;
  bottom: 175px;
  animation: elongate 2s infinite ease-in-out alternate;
  display: none;
}

model-viewer[ar-status="session-started"] > #ar-prompt {
  display: block;
}

model-viewer > #ar-prompt > img {
  animation: circle 4s linear infinite;
}

#ar-button {
  background-image: url("images/viewer.png");
  background-repeat: no-repeat;
  background-size: 20px 20px;
  background-position: 12px 50%;
  background-color: #fff;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  white-space: nowrap;
  bottom: 132px;
  padding: 0px 16px 0px 40px;
  font-family: Roboto Regular, Helvetica Neue, sans-serif;
  font-size: 14px;
  color: #4285f4;
  height: 36px;
  line-height: 36px;
  border-radius: 18px;
  border: 1px solid #dadce0;
}

#ar-button:active {
  background-color: #e8eaed;
}

#ar-button:focus {
  outline: none;
}

#ar-button:focus-visible {
  outline: 1px solid #4285f4 !important;
}

.mobile-ar-btn {
  display: none;
}

.model-filter-wrapper {
  display: flex;
  align-items: center;
  gap: 18px;
}

.model-filter-wrapper .item {
  display: flex;
  align-items: center;
  gap: 8px;
}

.hotspot {
  width: 20px;
  height: 20px;
  background-color: #4285f4;
  border-radius: 50%;
  border: none;
}

/* test */
#controls {
  position: absolute;
  bottom: 16px;
  left: 16px;
  max-width: unset;
  transform: unset;
  pointer-events: auto;
}

.dot {
  display: block;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  border: none;
  box-sizing: border-box;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  background: #fff;
  pointer-events: none;
  --min-hotspot-opacity: 0;
}

.dim {
  background: #fff;
  border-radius: 4px;
  border: none;
  box-sizing: border-box;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.25);
  color: rgba(0, 0, 0, 0.8);
  display: block;
  font-family: Futura, Helvetica Neue, sans-serif;
  font-size: 18px;
  font-weight: 700;
  max-width: 128px;
  overflow-wrap: break-word;
  padding: 0.5em 1em;
  position: absolute;
  width: max-content;
  height: max-content;
  transform: translate3d(-50%, -50%, 0);
  pointer-events: none;
  --min-hotspot-opacity: 0;
}

.dimensionLineContainer {
  pointer-events: none;
  position: fixed;
  display: block;
}

.dimensionLine {
  stroke: #16a5e6;
  stroke-width: 2;
  stroke-dasharray: 2;
}

.show {
  --min-hotspot-opacity: 1;
}

.hide {
  display: none;
}
/* This keeps child nodes hidden while the element loads */
:not(:defined) > * {
  display: none;
}

@keyframes circle {
  from {
    transform: translateX(-50%) rotate(0deg) translateX(50px) rotate(0deg);
  }
  to {
    transform: translateX(-50%) rotate(360deg) translateX(50px) rotate(-360deg);
  }
}

@keyframes elongate {
  from {
    transform: translateX(100px);
  }
  to {
    transform: translateX(-100px);
  }
}

@media only screen and (max-width: 600px) {
  .mobile-ar-btn {
    display: block;
  }
}
